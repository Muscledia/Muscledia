
networks:
  muscledia-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  mongodb-data:
    driver: local


services:
  # ===========================================
  # DATABASES
  # ===========================================

  mysql:
    image: mysql:8.0
    container_name: muscledia-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secure_root_password_123
      MYSQL_DATABASE: muscledia
      MYSQL_USER: springstudent
      MYSQL_PASSWORD: springstudent
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./config/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - muscledia-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb:
    image: mongo:6.0
    container_name: muscledia-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secure_mongo_password_123
      MONGO_INITDB_DATABASE: muscledia_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - ./config/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - muscledia-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5


    # ===========================================
    # KAFKA INFRASTRUCTURE (ADDED MISSING ZOOKEEPER)
    # ===========================================

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - muscledia-network

  broker:
    image: confluentinc/cp-kafka:7.5.0
    hostname: broker
    container_name: broker
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy  # Wait for Zookeeper to be healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - muscledia-network
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "broker:29092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # ===========================================
  # INFRASTRUCTURE SERVICES
  # ===========================================

  service-discovery:
    build:
      context: ./services/muscledia-service-discovery
      dockerfile: Dockerfile
    container_name: muscledia-service-discovery
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8761
    ports:
      - "8761:8761"
    networks:
      - muscledia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  api-gateway:
    build:
      context: ./services/muscledia-api-gateway
      dockerfile: Dockerfile
    container_name: muscledia-api-gateway
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-discovery:8761/eureka
      JWT_SECRET: 81795ad725b2cadd49d27a60438415588db374020a561ae19cafebeef6339655304975b150867b21d3715e341a49271a75a7dde39776e156af0ddad50f5e6ec3
    ports:
      - "8080:8080"
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - muscledia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ===========================================
  # BUSINESS SERVICES
  # ===========================================

  user-service:
    build:
      context: ./services/muscledia-user-service
      dockerfile: Dockerfile
    container_name: muscledia-user-service
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8081
      KAFKA_SERVERS: broker:29092
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-discovery:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/muscledia
      SPRING_DATASOURCE_USERNAME: springstudent
      SPRING_DATASOURCE_PASSWORD: springstudent
      JWT_SECRET: 81795ad725b2cadd49d27a60438415588db374020a561ae19cafebeef6339655304975b150867b21d3715e341a49271a75a7dde39776e156af0ddad50f5e6ec3
      JWT_ISSUER: muscledia-user-service
      JWT_EXPIRATION: 86400000
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      broker:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
    networks:
      - muscledia-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  workout-service:
    build:
      context: ./services/muscledia-workout-service
      dockerfile: Dockerfile
    container_name: muscledia-workout-service
    restart: unless-stopped
    environment:
      KAFKA_SERVERS: broker:29092
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8082
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-discovery:8761/eureka
      SPRING_DATA_MONGODB_URI: mongodb://admin:secure_mongo_password_123@mongodb:27017/muscledia_workouts?authSource=admin
      JWT_SECRET: 81795ad725b2cadd49d27a60438415588db374020a561ae19cafebeef6339655304975b150867b21d3715e341a49271a75a7dde39776e156af0ddad50f5e6ec3
      USER_SERVICE_URL: http://user-service:8081
    ports:
      - "8082:8082"
    depends_on:
      mongodb:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
    networks:
      - muscledia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  gamification-service:
    build:
      context: ./services/gamification-service
      dockerfile: Dockerfile
    container_name: muscledia-gamification-service
    restart: unless-stopped
    environment:
      KAFKA_SERVERS: broker:29092
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8083
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-discovery:8761/eureka
      SPRING_DATA_MONGODB_URI: mongodb://admin:secure_mongo_password_123@mongodb:27017/gamification_db?authSource=admin
      JWT_SECRET: 81795ad725b2cadd49d27a60438415588db374020a561ae19cafebeef6339655304975b150867b21d3715e341a49271a75a7dde39776e156af0ddad50f5e6ec3
      USER_SERVICE_URL: http://user-service:8081
    ports:
      - "8083:8083"
    depends_on:
      mongodb:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
    networks:
      - muscledia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ===========================================
  # REVERSE PROXY (Optional)
  # ===========================================

  nginx:
    image: nginx:alpine
    container_name: muscledia-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api-gateway
    networks:
      - muscledia-network